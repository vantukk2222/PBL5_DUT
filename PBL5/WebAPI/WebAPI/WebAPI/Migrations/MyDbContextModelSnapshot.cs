// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Data;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebAPI.Model.Account", b =>
                {
                    b.Property<int>("id_account")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("username")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("id_account");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("WebAPI.Model.History", b =>
                {
                    b.Property<string>("id_history")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("image")
                        .HasMaxLength(800)
                        .HasColumnType("varchar(800)");

                    b.Property<bool>("isout")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("number_plate")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("time")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id_history");

                    b.HasIndex("number_plate");

                    b.ToTable("History");
                });

            modelBuilder.Entity("WebAPI.Model.Person", b =>
                {
                    b.Property<int>("id_person")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("gender")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("phoneNumber")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("id_person");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("WebAPI.Model.Vehicle", b =>
                {
                    b.Property<string>("number_plate")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("car_manufacturer")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("color")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("id_person")
                        .HasColumnType("int");

                    b.Property<string>("name_vehide")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("number_plate");

                    b.HasIndex("id_person");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("WebAPI.Model.History", b =>
                {
                    b.HasOne("WebAPI.Model.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("number_plate");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("WebAPI.Model.Vehicle", b =>
                {
                    b.HasOne("WebAPI.Model.Person", "Person")
                        .WithMany("Vehicle")
                        .HasForeignKey("id_person")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("WebAPI.Model.Person", b =>
                {
                    b.Navigation("Vehicle");
                });
#pragma warning restore 612, 618
        }
    }
}
